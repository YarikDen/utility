//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Add.h"


//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm_Add_folder *Form_Add_folder;
std::list<CFolderWatcher> g_lst_FolderList;
//---------------------------------------------------------------------------
__fastcall TForm_Add_folder::TForm_Add_folder(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
/*
void ControlWatch(DWORD dwFilter,String wstr_Folder,BOOL B_Subfolder){
	HANDLE hFolder = CreateFileW( //open folder
			wstr_Folder.c_str(),
			FILE_LIST_DIRECTORY ,FILE_SHARE_WRITE | FILE_SHARE_READ | FILE_SHARE_DELETE,
			NULL,
			OPEN_EXISTING,
			FILE_FLAG_BACKUP_SEMANTICS,
			NULL);
	int i = 5;
	String wstr_FileName;
    String wstr_Change;
	if(hFolder != INVALID_HANDLE_VALUE){
		BYTE byBuffer[1024];//1Kb
		DWORD dwOffset = 0;
		DWORD dwAction = 0;
		PFILE_NOTIFY_INFORMATION  pstrFileNotifyInfo; //special structure that help us to get certain info about change and place where it was
		DWORD dwBytesReturned = 0,
		dwRetWriteByte = 0;
		WIN32_FIND_DATAW fd;
		HANDLE hFindFile,
		hWriteFile;
		time_t tTime;

		while(i>0)//Monitoring
		{
			if( !ReadDirectoryChangesW ( hFolder,byBuffer, sizeof(byBuffer), B_Subfolder,dwFilter, &dwBytesReturned, NULL, NULL) == 0)
			{   tTime = time(NULL);
				while(true){
					pstrFileNotifyInfo = (PFILE_NOTIFY_INFORMATION)&byBuffer[dwOffset];
					dwOffset += pstrFileNotifyInfo->NextEntryOffset;
					dwAction = pstrFileNotifyInfo->Action;
					wstr_FileName = Format("%s\\%s",ARRAYOFCONST((wstr_Folder,WideCharToString(pstrFileNotifyInfo->FileName))));
					if(dwAction != FILE_ACTION_REMOVED){

						ShowMessage(wstr_FileName);

						if(dwAction != FILE_ACTION_RENAMED_OLD_NAME){
							hFindFile = FindFirstFileW(wstr_FileName.c_str(),&fd);
						}
					}
					if(dwAction == FILE_ACTION_ADDED){
						 if(fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY){ //if file is a folder
							wstr_Change = Format("Time:<<%s>>; Name of file:<<%s>>; Change: <<Folder was added>>\r\n",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
							ShowMessage("Folder was added");
						 }else{
							wstr_Change = Format("Time:<<%s>>; Name of file:<<%s>>; Change: <<File was added>>\r\n",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
							ShowMessage("File element was added");
						 }
					}else if(dwAction == FILE_ACTION_REMOVED){
						wstr_Change = Format("Time:<<%s>>; Name of file or folder:<<%s>>; Change: <<File or folder was deleted>>\r\n",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
						ShowMessage("File element was removed");
					}else if(dwAction == FILE_ACTION_MODIFIED){
						if(fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY){
							wstr_Change = Format("Time:<<%s>>; Name of file:<<%s>>; Change: <<Folder was modified>>\r\n",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
							ShowMessage("Folder was added");
						 }else{
							wstr_Change = Format("Time:<<%s>>; Name of file:<<%s>>; Change: <<File was modified>>\r\n",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
							ShowMessage("File element was added");
						 }
						ShowMessage("File element was modified");
					}else if(dwAction == FILE_ACTION_RENAMED_OLD_NAME){
						wstr_Change = Format("Time:<<%s>>; Change: <<Renamed>>; Old Name of file or folder:<<%s>>; ",ARRAYOFCONST((ctime(&tTime),wstr_FileName)));
						ShowMessage("File element was with old name");
					}else if(dwAction == FILE_ACTION_RENAMED_NEW_NAME){
						wstr_Change = Format("%sNew Name of file or folder:<<%s>>;\r\n",ARRAYOFCONST((wstr_Change,wstr_FileName)));
						ShowMessage("File element was with new name");
					}

					if(dwAction != FILE_ACTION_RENAMED_OLD_NAME || dwAction != FILE_ACTION_REMOVED){
						FindClose(hFindFile);
					}

					if(dwAction != FILE_ACTION_RENAMED_OLD_NAME){
						hWriteFile = CreateFileW((".\\" + wstr_FileName + "_log.txt").c_str(),GENERIC_WRITE,0,NULL,OPEN_ALWAYS,FILE_ATTRIBUTE_NORMAL,NULL);
						if(hWriteFile != INVALID_HANDLE_VALUE){

							WriteFile(hWriteFile,wstr_Change.c_str(),sizeof(wstr_Change.c_str()),&dwRetWriteByte,(LPOVERLAPPED)NULL);
							CloseHandle(hWriteFile);
						}
					}

				//strFileNotifyInfo +=  strFileNotifyInfo.NextEntryOffset;
					if(!pstrFileNotifyInfo->NextEntryOffset){
						break;
					}
				}
				ZeroMemory(&byBuffer,sizeof(byBuffer));
				dwOffset = 0;
				pstrFileNotifyInfo = NULL;
				i--;
			}
		}
		CloseHandle(hFolder);
	}

}

*/
void __fastcall TForm_Add_folder::Button_CreateClick(TObject *Sender)
{   SFolderLog fl_Log = {"","",0,0};
	fl_Log.wstr_Folder = DirectoryListBox1->Directory;
	fl_Log.wstr_Logfile = "";
	fl_Log.B_SubFolder = FALSE;
	fl_Log.dwFilter = SetFilterWatcher(CheckListBox_Filter);
	BOOL B_Subfolder = FALSE;
	if(CheckBox_Subfolder->Checked){
        fl_Log.B_SubFolder = TRUE;
	}
	if(OpenDialog_FileLog->Execute()){
		fl_Log.wstr_Logfile = OpenDialog_FileLog->FileName ;
		if(!g_lst_FolderList.empty()){//if list is not empty

			if(ItemIsExist(g_lst_FolderList,fl_Log.wstr_Folder) == FALSE && IsExistsLog(g_lst_FolderList,fl_Log.wstr_Logfile) == FALSE ){ //if not exist
				if(fl_Log.dwFilter != 0 ){
					SetupElem(&g_lst_FolderList,fl_Log);
					ShowMessage("Click to <<Settings>> for configure Folder Watcher for this folder ");
				//g_lst_FolderList.push_back(wstr_UserChoise); //add
				//ControlWatch(dwFilter,wstr_UserChoise,B_Subfolder);
				// MessageDlg("Добре",mtCustom,TMsgDlgButtons()<<mbCancel,0);//good Message for Attention
				//MessageBox
				}else{
				ShowMessage("Please, Set Filter!!!");
				}
			}else{
				ShowMessage("This Folder or  log file have chosen yet!");
			}
		}else{
			if(fl_Log.dwFilter != 0){
                SetupElem(&g_lst_FolderList,fl_Log);
				//g_lst_FolderList.push_back(wstr_UserChoise);
				//ControlWatch(dwFilter,wstr_UserChoise,B_Subfolder);
				ShowMessage("Click to <<Settings>> for configure Folder Watcher for this folder ");
			}else{
				ShowMessage("Please, Set Filter!!!");
			}
		}
	}else{
        ShowMessage("Please, Select LogFile to save folder changes!!!");
	}

}
//---------------------------------------------------------------------------




