#ifndef CFolderWatcherH
#define CFolderWatcherH

#include <Windows.h>
#include <process.h>
#include <ctime>
#include <System.Classes.hpp>

typedef struct _Args{//thread function arguments
   String wstr_Folder;
   String wstr_LogFile;
   DWORD  dw_Filter;
   BOOL B_Subfolder;
   HANDLE h_Folder;
}Args,*PArgs;

void Writeutf8Data(String wstrSrc,HANDLE hFile );//Write data to file


DWORD WINAPI ThreadNotificator( LPVOID lpParam );//Thread function


class CFolderWatcher{

private:
	String wstr_Folder;     //Name of folder
	String wstr_LogFile;    //Name of Logfile
	DWORD  dw_Filter;       //Notify filter
	HANDLE h_Thread;        //Handle of thread
	HANDLE h_Folder;         //Handle of folder
	DWORD dw_id;            //ID of thread
	BOOL B_Subfolder;       //Look for subfolders
	BOOL B_State;           //State of thread


public:
	//FolderWatcher(String strFolder,DWORD dwFilter,State);
	CFolderWatcher(String wstrNameFolder = "",String wstr_Logfile = "",DWORD dwFilter = 0x01,BOOL BSubfolder= FALSE);//default constructor


/*	CFolderWather(const CFolderWatcher & copy_object){//copy constructor
		this->dw_Filter = copy_object.dw_Filter;
		this->wstr_LogFile = copy_object.wstr_LogFile;
		this->B_State = copy_object.B_State;
		this->h_Thread = copy_object.h_Thread;
		this->h_Folder = copy_object.h_Folder;
		this->dw_id = copy_object.dw_id;
		this->wstr_Folder = copy_object.wstr_Folder;
		this->B_Subfolder =  copy_object.B_Subfolder;
	}
    */
	~CFolderWatcher(){ //destructor

	}

	void StopWatch(void);// stop

	void ResumeWatch(void); //resume

	void TerminateWatch(void);//terminate

	BOOL GetState(void);//get state

	String GetFolderName(void);//get folder name

	DWORD GetFilter(void); //get value of filter


    BOOL GetSubfolder(void); //get value of subfolder


	String GetLogfile(void);//get name of log file


	HANDLE GetHandleWatcher(void);//get handle of watcher


	void SetFilter(DWORD dwFilter); //set filter


	void SetFolderName(String wstrName); //set folder name


	void SetSubfolder(BOOL BSubfolder);//set follow subfilders
}

	void SetLogfile(String wstr_Log);//set name of file where will be written changes




	void InitThreadWatch(void);//Initialize Folder Watcher

};

#endif
